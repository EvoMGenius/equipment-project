{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/point/{id}/update": {
      "put": {
        "tags": [
          "point-controller"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Point"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Point"
                }
              }
            }
          }
        }
      }
    },
    "/outfit-model/{id}/update": {
      "put": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "update_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutfitModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OutfitModel"
                }
              }
            }
          }
        }
      }
    },
    "/operator/{id}/update": {
      "put": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "update_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operator"
                }
              }
            }
          }
        }
      }
    },
    "/model-bike/{id}/update": {
      "put": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "update_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelBike"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelBike"
                }
              }
            }
          }
        }
      }
    },
    "/iot-model/{id}/update": {
      "put": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "update_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IotModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IotModel"
                }
              }
            }
          }
        }
      }
    },
    "/internal/simbalance/update": {
      "put": {
        "tags": [
          "sim-balance-internal-controller"
        ],
        "operationId": "update_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSimBalanceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SimBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/sim/update": {
      "put": {
        "tags": [
          "sim-internal-controller"
        ],
        "operationId": "update_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSimDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SimDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/outfit/update": {
      "put": {
        "tags": [
          "outfit-internal-controller"
        ],
        "operationId": "update_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOutfitDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OutfitDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement/update": {
      "put": {
        "tags": [
          "movement-internal-controller"
        ],
        "operationId": "update_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovementDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MovementDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement-compose/update": {
      "put": {
        "tags": [
          "movement-compose-controller"
        ],
        "operationId": "update_9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovementComposeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MovementComposeDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/iot/update": {
      "put": {
        "tags": [
          "iot-internal-controller"
        ],
        "operationId": "update_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIotDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IotDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/component/update": {
      "put": {
        "tags": [
          "component-internal-controller"
        ],
        "operationId": "update_11",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComponentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/bike/update": {
      "put": {
        "tags": [
          "bike-internal-controller"
        ],
        "operationId": "update_12",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBikeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BikeDto"
                }
              }
            }
          }
        }
      }
    },
    "/component-model/{id}/update": {
      "put": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "update_13",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModel"
                }
              }
            }
          }
        }
      }
    },
    "/point/create": {
      "post": {
        "tags": [
          "point-controller"
        ],
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Point"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Point"
                }
              }
            }
          }
        }
      }
    },
    "/outfit-model/create": {
      "post": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutfitModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OutfitModel"
                }
              }
            }
          }
        }
      }
    },
    "/operator/create": {
      "post": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Operator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operator"
                }
              }
            }
          }
        }
      }
    },
    "/model-bike/create": {
      "post": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelBike"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelBike"
                }
              }
            }
          }
        }
      }
    },
    "/iot-model/create": {
      "post": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IotModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IotModel"
                }
              }
            }
          }
        }
      }
    },
    "/internal/simbalance/create": {
      "post": {
        "tags": [
          "sim-balance-internal-controller"
        ],
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimBalanceDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SimBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/sim/create": {
      "post": {
        "tags": [
          "sim-internal-controller"
        ],
        "operationId": "create_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SimDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/outfit/create": {
      "post": {
        "tags": [
          "outfit-internal-controller"
        ],
        "operationId": "create_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOutfitDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OutfitDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement/create": {
      "post": {
        "tags": [
          "movement-internal-controller"
        ],
        "operationId": "create_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovementDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MovementDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement-compose/create": {
      "post": {
        "tags": [
          "movement-compose-controller"
        ],
        "operationId": "create_9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovementComposeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MovementComposeDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/iot/create": {
      "post": {
        "tags": [
          "iot-internal-controller"
        ],
        "operationId": "create_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIotDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IotDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/component/create": {
      "post": {
        "tags": [
          "component-internal-controller"
        ],
        "operationId": "create_11",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComponentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/bike/create": {
      "post": {
        "tags": [
          "bike-internal-controller"
        ],
        "operationId": "create_12",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBikeDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BikeDto"
                }
              }
            }
          }
        }
      }
    },
    "/component-model/create": {
      "post": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "create_13",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModel"
                }
              }
            }
          }
        }
      }
    },
    "/point/{id}": {
      "get": {
        "tags": [
          "point-controller"
        ],
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Point"
                }
              }
            }
          }
        }
      }
    },
    "/point/page": {
      "get": {
        "tags": [
          "point-controller"
        ],
        "operationId": "page",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoPoint"
                }
              }
            }
          }
        }
      }
    },
    "/point/list": {
      "get": {
        "tags": [
          "point-controller"
        ],
        "operationId": "getAll",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Point"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/outfit-model/{id}": {
      "get": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "getById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OutfitModel"
                }
              }
            }
          }
        }
      }
    },
    "/outfit-model/page": {
      "get": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "page_1",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoOutfitModel"
                }
              }
            }
          }
        }
      }
    },
    "/outfit-model/list": {
      "get": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutfitModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/operator/{id}": {
      "get": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "getById_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Operator"
                }
              }
            }
          }
        }
      }
    },
    "/operator/page": {
      "get": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "page_2",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoOperator"
                }
              }
            }
          }
        }
      }
    },
    "/operator/list": {
      "get": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Operator"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/model-bike/{id}": {
      "get": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "getById_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ModelBike"
                }
              }
            }
          }
        }
      }
    },
    "/model-bike/page": {
      "get": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "page_3",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoModelBike"
                }
              }
            }
          }
        }
      }
    },
    "/model-bike/list": {
      "get": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelBike"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/iot-model/{id}": {
      "get": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "getById_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IotModel"
                }
              }
            }
          }
        }
      }
    },
    "/iot-model/page": {
      "get": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "page_4",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoIotModel"
                }
              }
            }
          }
        }
      }
    },
    "/iot-model/list": {
      "get": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "getAll_4",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IotModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/simbalance/page": {
      "get": {
        "tags": [
          "sim-balance-internal-controller"
        ],
        "operationId": "page_5",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchSimBalanceDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoSimBalanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/simbalance/list": {
      "get": {
        "tags": [
          "sim-balance-internal-controller"
        ],
        "operationId": "list",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchSimBalanceDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimBalanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/sim/page": {
      "get": {
        "tags": [
          "sim-internal-controller"
        ],
        "operationId": "page_6",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchSimDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoSimDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/sim/list": {
      "get": {
        "tags": [
          "sim-internal-controller"
        ],
        "operationId": "list_1",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchSimDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/outfit/page": {
      "get": {
        "tags": [
          "outfit-internal-controller"
        ],
        "operationId": "page_7",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchOutfitDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoOutfitDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/outfit/list": {
      "get": {
        "tags": [
          "outfit-internal-controller"
        ],
        "operationId": "list_2",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchOutfitDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutfitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement/page": {
      "get": {
        "tags": [
          "movement-internal-controller"
        ],
        "operationId": "page_8",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchMovementDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoMovementDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement/list": {
      "get": {
        "tags": [
          "movement-internal-controller"
        ],
        "operationId": "list_3",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchMovementDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MovementDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement-compose/page": {
      "get": {
        "tags": [
          "movement-compose-controller"
        ],
        "operationId": "page_9",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchMovementComposeDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoMovementComposeDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/movement-compose/list": {
      "get": {
        "tags": [
          "movement-compose-controller"
        ],
        "operationId": "list_4",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchMovementComposeDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MovementComposeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/iot/page": {
      "get": {
        "tags": [
          "iot-internal-controller"
        ],
        "operationId": "page_10",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchIotDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoIotDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/iot/list": {
      "get": {
        "tags": [
          "iot-internal-controller"
        ],
        "operationId": "list_5",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchIotDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IotDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/component/page": {
      "get": {
        "tags": [
          "component-internal-controller"
        ],
        "operationId": "page_11",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchComponentDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoComponentDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/component/list": {
      "get": {
        "tags": [
          "component-internal-controller"
        ],
        "operationId": "list_6",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchComponentDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/bike/page": {
      "get": {
        "tags": [
          "bike-internal-controller"
        ],
        "operationId": "page_12",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchBikeDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoBikeDto"
                }
              }
            }
          }
        }
      }
    },
    "/internal/bike/list": {
      "get": {
        "tags": [
          "bike-internal-controller"
        ],
        "operationId": "list_7",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SearchBikeDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BikeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/component-model/{id}": {
      "get": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "getById_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentModel"
                }
              }
            }
          }
        }
      }
    },
    "/component-model/page": {
      "get": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "page_13",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDtoComponentModel"
                }
              }
            }
          }
        }
      }
    },
    "/component-model/list": {
      "get": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "getAll_5",
        "parameters": [
          {
            "name": "dto",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BaseDictionarySearchDto"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComponentModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/point/{id}/delete": {
      "delete": {
        "tags": [
          "point-controller"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/outfit-model/{id}/delete": {
      "delete": {
        "tags": [
          "outfit-model-controller"
        ],
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/operator/{id}/delete": {
      "delete": {
        "tags": [
          "operator-controller"
        ],
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/model-bike/{id}/delete": {
      "delete": {
        "tags": [
          "model-bike-controller"
        ],
        "operationId": "delete_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/iot-model/{id}/delete": {
      "delete": {
        "tags": [
          "iot-model-controller"
        ],
        "operationId": "delete_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/simbalance/{id}/delete": {
      "delete": {
        "tags": [
          "sim-balance-internal-controller"
        ],
        "operationId": "delete_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/sim/{id}/delete": {
      "delete": {
        "tags": [
          "sim-internal-controller"
        ],
        "operationId": "delete_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/outfit/{id}/delete": {
      "delete": {
        "tags": [
          "outfit-internal-controller"
        ],
        "operationId": "delete_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/movement/{id}/delete": {
      "delete": {
        "tags": [
          "movement-internal-controller"
        ],
        "operationId": "delete_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/movement-compose/{id}/delete": {
      "delete": {
        "tags": [
          "movement-compose-controller"
        ],
        "operationId": "delete_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/iot/{id}/delete": {
      "delete": {
        "tags": [
          "iot-internal-controller"
        ],
        "operationId": "delete_10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/component/{id}/delete": {
      "delete": {
        "tags": [
          "component-internal-controller"
        ],
        "operationId": "delete_11",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/internal/bike/{id}/delete": {
      "delete": {
        "tags": [
          "bike-internal-controller"
        ],
        "operationId": "delete_12",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/component-model/{id}/delete": {
      "delete": {
        "tags": [
          "component-model-controller"
        ],
        "operationId": "delete_13",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Point": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OutfitModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Operator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ModelBike": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IotModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateSimBalanceDto": {
        "required": [
          "createDate",
          "id",
          "simId",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "format": "uuid"
          },
          "value": {
            "type": "integer",
            "description": "Баланс",
            "format": "int32"
          },
          "simId": {
            "type": "string",
            "description": "id Sim-карты",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "description": "Дата создания",
            "format": "date-time"
          }
        }
      },
      "SimBalanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "format": "uuid"
          },
          "value": {
            "type": "integer",
            "description": "Баланс",
            "format": "int32"
          },
          "sim": {
            "$ref": "#/components/schemas/SimDto"
          },
          "createDate": {
            "type": "string",
            "description": "Дата создания",
            "format": "date-time"
          }
        },
        "description": "DTO баланса Sim-карты"
      },
      "SimDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "format": "uuid"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Номер телефона"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        },
        "description": "DTO Sim-карты"
      },
      "UpdateSimDto": {
        "required": [
          "id",
          "operatorId",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор",
            "format": "uuid"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Номер телефона"
          },
          "operatorId": {
            "type": "string",
            "description": "id оператора",
            "format": "uuid"
          }
        },
        "description": "DTO обновления Sim-карты"
      },
      "UpdateOutfitDto": {
        "required": [
          "comment",
          "id",
          "invNumber",
          "outfitModelId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор экипировки",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "outfitModelId": {
            "type": "string",
            "description": "id Модели экипировки",
            "format": "uuid"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер экипировки",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Текущий статус экипировки",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Выдана на сезонное использование"
          }
        },
        "description": "DTO обновления экипировки"
      },
      "OutfitDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор экипировки",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "model": {
            "$ref": "#/components/schemas/OutfitModel"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер экипировки",
            "format": "int32",
            "example": 4521
          },
          "status": {
            "type": "string",
            "description": "Текущий статус экипировки",
            "example": "AVAILABLE",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Выдана на сезонное использование"
          }
        },
        "description": "DTO экипировки"
      },
      "UpdateMovementDto": {
        "required": [
          "dateEnd",
          "id",
          "note",
          "pointFromId",
          "pointToId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор перемещения",
            "format": "uuid",
            "example": "a12f45c7-89d0-4b23-b1a7-1234567890ab"
          },
          "pointFromId": {
            "type": "string",
            "description": "Идентификатор точки отправления",
            "format": "uuid",
            "example": "1e3b45f6-67d8-4c2b-b9d1-7890abcdef12"
          },
          "pointToId": {
            "type": "string",
            "description": "Идентификатор точки назначения",
            "format": "uuid",
            "example": "4a6c89d1-23f7-45b8-9cde-23456789abcd"
          },
          "dateEnd": {
            "type": "string",
            "description": "Дата и время завершения перемещения",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Статус перемещения",
            "enum": [
              "ACTIVE"
            ]
          },
          "note": {
            "type": "string",
            "description": "Дополнительная заметка",
            "example": "Доставлен в сервисный центр"
          }
        },
        "description": "DTO обновления передвижения"
      },
      "MovementDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор перемещения",
            "format": "uuid",
            "example": "a12f45c7-89d0-4b23-b1a7-1234567890ab"
          },
          "createDate": {
            "type": "string",
            "description": "Дата и время создания записи",
            "format": "date-time"
          },
          "pointFrom": {
            "$ref": "#/components/schemas/Point"
          },
          "pointTo": {
            "$ref": "#/components/schemas/Point"
          },
          "dateEnd": {
            "type": "string",
            "description": "Дата и время завершения перемещения",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Статус перемещения",
            "enum": [
              "ACTIVE"
            ]
          },
          "note": {
            "type": "string",
            "description": "Дополнительная заметка",
            "example": "Доставлен в сервисный центр"
          }
        },
        "description": "DTO передвижения"
      },
      "UpdateMovementComposeDto": {
        "required": [
          "amount",
          "id",
          "movementId",
          "note",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор",
            "format": "uuid",
            "example": "2f4e3b1a-7b2d-43d3-b8f7-92a7d5c5e123"
          },
          "movementId": {
            "type": "string",
            "description": "Идентификатор перемещения",
            "format": "uuid",
            "example": "c1f2a3b4-5678-49ab-90cd-1234567890ef"
          },
          "objectId": {
            "type": "string",
            "description": "Идентификатор объекта (например, велосипеда или компонента)",
            "format": "uuid",
            "example": "d4e5f6a7-8901-42bc-a1de-abcdef123456"
          },
          "amount": {
            "type": "integer",
            "description": "Количество объектов в составе перемещения",
            "format": "int32",
            "example": 10
          },
          "note": {
            "type": "string",
            "description": "Комментарий к записи состава перемещения",
            "example": "Переданы вместе с запчастями"
          }
        },
        "description": "DTO обновления состава передвижения"
      },
      "MovementComposeDto": {
        "type": "object",
        "properties": {
          "movement": {
            "$ref": "#/components/schemas/MovementDto"
          },
          "objectId": {
            "type": "string",
            "description": "Идентификатор объекта (например, велосипеда или компонента)",
            "format": "uuid",
            "example": "d4e5f6a7-8901-42bc-a1de-abcdef123456"
          },
          "amount": {
            "type": "integer",
            "description": "Количество объектов в составе перемещения",
            "format": "int32",
            "example": 10
          },
          "note": {
            "type": "string",
            "description": "Комментарий к записи состава перемещения",
            "example": "Переданы вместе с запчастями"
          }
        },
        "description": "DTO состава передвижения"
      },
      "UpdateIotDto": {
        "required": [
          "comment",
          "id",
          "invNumber",
          "iotModelId",
          "simId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор IoT-устройства",
            "format": "uuid",
            "example": "3f2b7c9d-5a23-4e91-8b41-12cd56e7a9ef"
          },
          "iotModelId": {
            "type": "string",
            "description": "id модели IoT-устройства",
            "format": "uuid"
          },
          "invNumber": {
            "type": "string",
            "description": "Инвентарный номер IoT-устройства"
          },
          "simId": {
            "type": "string",
            "description": "id SIM-карты",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "Статус IoT-устройства",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Устройство установлено на велосипед №12"
          }
        },
        "description": "DTO обновления IoT-устройств"
      },
      "IotDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор IoT-устройства",
            "format": "uuid",
            "example": "3f2b7c9d-5a23-4e91-8b41-12cd56e7a9ef"
          },
          "model": {
            "$ref": "#/components/schemas/IotModel"
          },
          "invNumber": {
            "type": "string",
            "description": "Инвентарный номер IoT-устройства",
            "example": "IOT-12345"
          },
          "sim": {
            "$ref": "#/components/schemas/SimDto"
          },
          "status": {
            "type": "string",
            "description": "Статус IoT-устройства",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Устройство установлено на велосипед №12"
          }
        },
        "description": "DTO IoT-устройств"
      },
      "ComponentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Модель компонента"
      },
      "UpdateComponentDto": {
        "required": [
          "comment",
          "id",
          "invNumber",
          "model",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор компонента",
            "format": "uuid",
            "example": "2f4e3b1a-7b2d-43d3-b8f7-92a7d5c5e123"
          },
          "model": {
            "$ref": "#/components/schemas/ComponentModel"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер компонента",
            "format": "int32",
            "example": 56789
          },
          "status": {
            "type": "string",
            "description": "Статус компонента",
            "example": "ACTIVE"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Требуется диагностика"
          }
        },
        "description": "DTO обновления компонента"
      },
      "ComponentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор компонента",
            "format": "uuid",
            "example": "2f4e3b1a-7b2d-43d3-b8f7-92a7d5c5e123"
          },
          "model": {
            "$ref": "#/components/schemas/ComponentModel"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер компонента",
            "format": "int32",
            "example": 56789
          },
          "status": {
            "type": "string",
            "description": "Статус компонента",
            "example": "ACTIVE"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Требуется диагностика"
          }
        },
        "description": "DTO компонента"
      },
      "UpdateBikeDto": {
        "required": [
          "comment",
          "id",
          "invNumber",
          "iotId",
          "modelBikeId",
          "motorWheel",
          "seqNumber",
          "status",
          "vin"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор велосипеда",
            "format": "uuid"
          },
          "modelBikeId": {
            "type": "string",
            "description": "Идентификатор модели велосипеда",
            "format": "uuid"
          },
          "seqNumber": {
            "type": "integer",
            "description": "Порядковый номер внутри модели",
            "format": "int32"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер велосипеда",
            "format": "int32"
          },
          "vin": {
            "type": "string",
            "description": "VIN — уникальный идентификатор транспортного средства"
          },
          "motorWheel": {
            "type": "string",
            "description": "Марка/модель моторного колеса"
          },
          "iotId": {
            "type": "string",
            "description": "Идентификатор привязанного IoT-устройства",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "Статус велосипеда",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или дополнительная информация"
          }
        },
        "description": "DTO обновления велосипеда"
      },
      "BikeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор велосипеда",
            "format": "uuid"
          },
          "modelBike": {
            "$ref": "#/components/schemas/ModelBike"
          },
          "seqNumber": {
            "type": "integer",
            "description": "Порядковый номер внутри модели",
            "format": "int32"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер велосипеда",
            "format": "int32"
          },
          "vin": {
            "type": "string",
            "description": "VIN — уникальный идентификатор транспортного средства"
          },
          "motorWheel": {
            "type": "string",
            "description": "Марка/модель моторного колеса"
          },
          "iot": {
            "$ref": "#/components/schemas/IotDto"
          },
          "status": {
            "type": "string",
            "description": "Статус велосипеда",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или дополнительная информация"
          }
        },
        "description": "DTO велосипеда"
      },
      "CreateSimBalanceDto": {
        "required": [
          "createDate",
          "simId",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Баланс",
            "format": "int32"
          },
          "simId": {
            "type": "string",
            "description": "id Sim-карты",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "description": "Дата создания",
            "format": "date-time"
          }
        }
      },
      "CreateSimDto": {
        "required": [
          "operatorId",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Номер телефона"
          },
          "operatorId": {
            "type": "string",
            "description": "id оператора",
            "format": "uuid"
          }
        },
        "description": "DTO создания Sim-карты"
      },
      "CreateOutfitDto": {
        "required": [
          "comment",
          "invNumber",
          "outfitModelId"
        ],
        "type": "object",
        "properties": {
          "outfitModelId": {
            "type": "string",
            "description": "id Модели экипировки",
            "format": "uuid"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер экипировки",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Выдана на сезонное использование"
          }
        },
        "description": "DTO создания экипировки"
      },
      "CreateMovementDto": {
        "required": [
          "dateEnd",
          "note",
          "pointFromId",
          "pointToId"
        ],
        "type": "object",
        "properties": {
          "pointFromId": {
            "type": "string",
            "description": "Идентификатор точки отправления",
            "format": "uuid",
            "example": "1e3b45f6-67d8-4c2b-b9d1-7890abcdef12"
          },
          "pointToId": {
            "type": "string",
            "description": "Идентификатор точки назначения",
            "format": "uuid",
            "example": "4a6c89d1-23f7-45b8-9cde-23456789abcd"
          },
          "dateEnd": {
            "type": "string",
            "description": "Дата и время завершения перемещения",
            "format": "date-time"
          },
          "note": {
            "type": "string",
            "description": "Дополнительная заметка",
            "example": "Доставлен в сервисный центр"
          }
        },
        "description": "DTO создания передвижения"
      },
      "CreateMovementComposeDto": {
        "required": [
          "amount",
          "movementId",
          "note",
          "objectId"
        ],
        "type": "object",
        "properties": {
          "movementId": {
            "type": "string",
            "description": "Идентификатор перемещения",
            "format": "uuid",
            "example": "c1f2a3b4-5678-49ab-90cd-1234567890ef"
          },
          "objectId": {
            "type": "string",
            "description": "Идентификатор объекта (например, велосипеда или компонента)",
            "format": "uuid",
            "example": "d4e5f6a7-8901-42bc-a1de-abcdef123456"
          },
          "amount": {
            "type": "integer",
            "description": "Количество объектов в составе перемещения",
            "format": "int32",
            "example": 10
          },
          "note": {
            "type": "string",
            "description": "Комментарий к записи состава перемещения",
            "example": "Переданы вместе с запчастями"
          }
        },
        "description": "DTO создания состава передвижения"
      },
      "CreateIotDto": {
        "required": [
          "comment",
          "invNumber",
          "iotModelId",
          "simId"
        ],
        "type": "object",
        "properties": {
          "iotModelId": {
            "type": "string",
            "description": "id модели IoT-устройства",
            "format": "uuid"
          },
          "invNumber": {
            "type": "string",
            "description": "Инвентарный номер IoT-устройства"
          },
          "simId": {
            "type": "string",
            "description": "id SIM-карты",
            "format": "uuid"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Устройство установлено на велосипед №12"
          }
        },
        "description": "DTO создания IoT-устройств"
      },
      "CreateComponentDto": {
        "required": [
          "comment",
          "invNumber",
          "modelId",
          "status"
        ],
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Идентификатор модели компонента",
            "format": "uuid",
            "example": "5b8a8f6e-2c9d-4e73-83ff-15c1f123abcd"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер компонента",
            "format": "int32",
            "example": 56789
          },
          "status": {
            "type": "string",
            "description": "Статус компонента",
            "example": "ACTIVE"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Требуется диагностика"
          }
        },
        "description": "DTO создания компонента"
      },
      "CreateBikeDto": {
        "required": [
          "comment",
          "invNumber",
          "iotId",
          "modelBikeId",
          "motorWheel",
          "seqNumber",
          "vin"
        ],
        "type": "object",
        "properties": {
          "modelBikeId": {
            "type": "string",
            "description": "Идентификатор модели велосипеда",
            "format": "uuid"
          },
          "seqNumber": {
            "type": "integer",
            "description": "Порядковый номер внутри модели",
            "format": "int32"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер велосипеда",
            "format": "int32"
          },
          "vin": {
            "type": "string",
            "description": "VIN — уникальный идентификатор транспортного средства"
          },
          "motorWheel": {
            "type": "string",
            "description": "Марка/модель моторного колеса"
          },
          "iotId": {
            "type": "string",
            "description": "Идентификатор привязанного IoT-устройства",
            "format": "uuid"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или дополнительная информация"
          }
        },
        "description": "DTO для создания велосипеда"
      },
      "BaseDictionarySearchDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование"
          },
          "status": {
            "type": "string",
            "description": "Статус",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          }
        },
        "description": "DTO базового поиска справочника"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CollectionDtoPoint": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CollectionDtoOutfitModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutfitModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CollectionDtoOperator": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operator"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CollectionDtoModelBike": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelBike"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CollectionDtoIotModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IotModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchSimBalanceDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Баланс",
            "format": "int32"
          },
          "simId": {
            "type": "string",
            "description": "id Sim-карты",
            "format": "uuid"
          },
          "createDateFrom": {
            "type": "string",
            "description": "Дата создания начало",
            "format": "date-time"
          },
          "createDateTo": {
            "type": "string",
            "description": "Дата создания конец",
            "format": "date-time"
          }
        }
      },
      "CollectionDtoSimBalanceDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimBalanceDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchSimDto": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "description": "Номер телефона"
          },
          "operatorId": {
            "type": "string",
            "description": "id оператора",
            "format": "uuid"
          }
        },
        "description": "DTO поиска Sim-карты"
      },
      "CollectionDtoSimDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchOutfitDto": {
        "type": "object",
        "properties": {
          "outfitModelId": {
            "type": "string",
            "description": "id Модели экипировки",
            "format": "uuid"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер экипировки",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Текущий статус экипировки",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "example": "Выдана на сезонное использование"
          }
        },
        "description": "DTO поиска экипировки"
      },
      "CollectionDtoOutfitDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutfitDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchMovementDto": {
        "type": "object",
        "properties": {
          "createDate": {
            "type": "string",
            "description": "Дата и время создания записи",
            "format": "date-time"
          },
          "pointFromId": {
            "type": "string",
            "description": "Идентификатор точки отправления",
            "format": "uuid",
            "example": "1e3b45f6-67d8-4c2b-b9d1-7890abcdef12"
          },
          "pointToId": {
            "type": "string",
            "description": "Идентификатор точки назначения",
            "format": "uuid",
            "example": "4a6c89d1-23f7-45b8-9cde-23456789abcd"
          },
          "dateEnd": {
            "type": "string",
            "description": "Дата и время завершения перемещения",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Статус перемещения",
            "enum": [
              "ACTIVE"
            ]
          },
          "note": {
            "type": "string",
            "description": "Дополнительная заметка",
            "example": "Доставлен в сервисный центр"
          }
        },
        "description": "DTO поиска передвижения"
      },
      "CollectionDtoMovementDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MovementDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchMovementComposeDto": {
        "type": "object",
        "properties": {
          "movementId": {
            "type": "string",
            "description": "Идентификатор перемещения",
            "format": "uuid",
            "example": "c1f2a3b4-5678-49ab-90cd-1234567890ef"
          },
          "objectId": {
            "type": "string",
            "description": "Идентификатор объекта (например, велосипеда или компонента)",
            "format": "uuid",
            "example": "d4e5f6a7-8901-42bc-a1de-abcdef123456"
          },
          "amount": {
            "type": "integer",
            "description": "Количество объектов в составе перемещения",
            "format": "int32",
            "example": 10
          },
          "note": {
            "type": "string",
            "description": "Комментарий к записи состава перемещения",
            "example": "Переданы вместе с запчастями"
          }
        },
        "description": "DTO поиска состава передвижения"
      },
      "CollectionDtoMovementComposeDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MovementComposeDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchIotDto": {
        "type": "object",
        "properties": {
          "iotModelId": {
            "type": "string",
            "description": "id модели IoT-устройства",
            "format": "uuid"
          },
          "invNumber": {
            "type": "string",
            "description": "Инвентарный номер IoT-устройства"
          },
          "simId": {
            "type": "string",
            "description": "id SIM-карты",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "Статус IoT-устройства",
            "example": "ACTIVE",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Устройство установлено на велосипед №12"
          }
        },
        "description": "DTO поиска IoT-устройств"
      },
      "CollectionDtoIotDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IotDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchComponentDto": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "string",
            "description": "Идентификатор модели компонента",
            "format": "uuid",
            "example": "5b8a8f6e-2c9d-4e73-83ff-15c1f123abcd"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер компонента",
            "format": "int32",
            "example": 56789
          },
          "status": {
            "type": "string",
            "description": "Статус компонента",
            "example": "ACTIVE"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или примечание",
            "example": "Требуется диагностика"
          }
        },
        "description": "DTO поиска компонента"
      },
      "CollectionDtoComponentDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchBikeDto": {
        "type": "object",
        "properties": {
          "modelBikeId": {
            "type": "string",
            "description": "Идентификатор модели велосипеда",
            "format": "uuid"
          },
          "seqNumber": {
            "type": "integer",
            "description": "Порядковый номер внутри модели",
            "format": "int32"
          },
          "invNumber": {
            "type": "integer",
            "description": "Инвентарный номер велосипеда",
            "format": "int32"
          },
          "vin": {
            "type": "string",
            "description": "VIN — уникальный идентификатор транспортного средства"
          },
          "motorWheel": {
            "type": "string",
            "description": "Марка/модель моторного колеса"
          },
          "iotId": {
            "type": "string",
            "description": "Идентификатор привязанного IoT-устройства",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "description": "Статус велосипеда",
            "enum": [
              "ACTIVE"
            ]
          },
          "comment": {
            "type": "string",
            "description": "Комментарий или дополнительная информация"
          }
        },
        "description": "DTO поиска велосипеда"
      },
      "CollectionDtoBikeDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BikeDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CollectionDtoComponentModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentModel"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}